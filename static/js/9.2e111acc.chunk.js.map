{"version":3,"sources":["components/cards/InstallCard.js","base_components/CodeCard.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_snippets__WEBPACK_IMPORTED_MODULE_1__","_base_components_CodeCard__WEBPACK_IMPORTED_MODULE_2__","InstallCard","a","createElement","cardTitle","install","title","codeSnippet","code","language","CodeCard","_ref","_ref$codeSnippet","options","example","description","_useState","useState","_useState2","Object","_home_travis_build_byrne_greg_testcafe_cheat_sheet_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isShowingOptions","setIsShowingOptions","_useState3","_useState4","isShowingExample","setIsShowingExample","react__WEBPACK_IMPORTED_MODULE_1___default","react_bootstrap__WEBPACK_IMPORTED_MODULE_2__","Header","Body","Text","_CodeHighlight__WEBPACK_IMPORTED_MODULE_8__","style","display","document","queryCommandSupported","react_copy_to_clipboard__WEBPACK_IMPORTED_MODULE_7__","text","onCopy","react_bootstrap__WEBPACK_IMPORTED_MODULE_3__","variant","Title","react_bootstrap__WEBPACK_IMPORTED_MODULE_4__","paddingBottom","react_bootstrap__WEBPACK_IMPORTED_MODULE_5__","type","name","defaultValue","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","value","onClick","Fragment"],"mappings":"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","file":"static/js/9.2e111acc.chunk.js","sourcesContent":["import React from \"react\";\nimport { install } from \"../../snippets\";\nimport CodeCard from \"../../base_components/CodeCard\";\n\nconst InstallCard = () => (\n  <CodeCard\n    cardTitle={install.title}\n    codeSnippet={{\n      code: install.code,\n      language: install.language\n    }}\n  />\n);\n\nexport default InstallCard;\n","import React, { useState } from \"react\";\nimport {\n  Card,\n  Button,\n  ButtonToolbar,\n  ToggleButtonGroup,\n  ToggleButton\n} from \"react-bootstrap\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { CodeHighlight } from \"./CodeHighlight\";\n\nconst CodeCard = ({\n  cardTitle,\n  codeSnippet: { code, language, options, example },\n  description\n}) => {\n  const [isShowingOptions, setIsShowingOptions] = useState(false);\n  const [isShowingExample, setIsShowingExample] = useState(false);\n\n  return (\n    <Card>\n      <Card.Header>{cardTitle}</Card.Header>\n      <Card.Body>\n        {description ? <Card.Text>{description}</Card.Text> : null}\n        <CodeHighlight style={{ display: \"inline-table\" }} language={language}>\n          {code}\n        </CodeHighlight>\n        {document.queryCommandSupported(\"copy\") && (\n          <CopyToClipboard text={code} onCopy={() => {}}>\n            <Button variant=\"info\">Copy</Button>\n          </CopyToClipboard>\n        )}\n      </Card.Body>\n      {options ? (\n        <Card.Body>\n          <Card.Title>Options</Card.Title>\n          <ButtonToolbar style={{ paddingBottom: \"10px\" }}>\n            <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={2}>\n              <ToggleButton\n                variant=\"outline-secondary\"\n                value={1}\n                onClick={() => setIsShowingOptions(true)}\n              >\n                Show\n              </ToggleButton>\n              <ToggleButton\n                variant=\"outline-secondary\"\n                value={2}\n                onClick={() => setIsShowingOptions(false)}\n              >\n                Hide\n              </ToggleButton>\n            </ToggleButtonGroup>\n          </ButtonToolbar>\n          {isShowingOptions ? (\n            <>\n              <CodeHighlight\n                style={{ display: \"inline-table\" }}\n                language={language}\n              >\n                {options}\n              </CodeHighlight>\n              {document.queryCommandSupported(\"copy\") && (\n                <CopyToClipboard text={code} onCopy={() => {}}>\n                  <Button variant=\"info\">Copy</Button>\n                </CopyToClipboard>\n              )}\n            </>\n          ) : null}\n        </Card.Body>\n      ) : null}\n\n      {example ? (\n        <Card.Body>\n          <Card.Title>Example</Card.Title>\n          <ButtonToolbar style={{ paddingBottom: \"10px\" }}>\n            <ToggleButtonGroup type=\"radio\" name=\"example\" defaultValue={2}>\n              <ToggleButton\n                variant=\"outline-secondary\"\n                value={1}\n                onClick={() => setIsShowingExample(true)}\n              >\n                Show\n              </ToggleButton>\n              <ToggleButton\n                variant=\"outline-secondary\"\n                value={2}\n                onClick={() => setIsShowingExample(false)}\n              >\n                Hide\n              </ToggleButton>\n            </ToggleButtonGroup>\n          </ButtonToolbar>\n          {isShowingExample ? (\n            <>\n              <CodeHighlight\n                style={{ display: \"inline-table\" }}\n                language={language}\n              >\n                {example}\n              </CodeHighlight>\n              {document.queryCommandSupported(\"copy\") && (\n                <CopyToClipboard text={code} onCopy={() => {}}>\n                  <Button variant=\"info\">Copy</Button>\n                </CopyToClipboard>\n              )}\n            </>\n          ) : null}\n        </Card.Body>\n      ) : null}\n    </Card>\n  );\n};\n\nexport default CodeCard;\n"],"sourceRoot":""}