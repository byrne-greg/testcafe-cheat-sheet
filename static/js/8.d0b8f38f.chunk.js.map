{"version":3,"sources":["components/cards/FixtureCard.js","base_components/MultiCodeCard.js","../node_modules/react-bootstrap/es/ListGroupItem.js","../node_modules/react-bootstrap/es/ListGroup.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_snippets__WEBPACK_IMPORTED_MODULE_1__","_base_components_MultiCodeCard__WEBPACK_IMPORTED_MODULE_2__","FixtureCard","a","createElement","cardTitle","fixture","title","fullDocLink","codeSections","CodeCard","_ref","_useState","useState","_useState2","Object","_home_travis_build_byrne_greg_testcafe_cheat_sheet_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isShowingOptions","setIsShowingOptions","_useState3","_useState4","isShowingExample","setIsShowingExample","react__WEBPACK_IMPORTED_MODULE_1___default","react_bootstrap__WEBPACK_IMPORTED_MODULE_2__","_base_components_CardHeader__WEBPACK_IMPORTED_MODULE_10__","docLink","map","_ref2","description","language","code","options","example","react_bootstrap__WEBPACK_IMPORTED_MODULE_3__","key","Item","Body","Text","_CodeHighlight__WEBPACK_IMPORTED_MODULE_9__","Title","react_bootstrap__WEBPACK_IMPORTED_MODULE_4__","style","paddingBottom","react_bootstrap__WEBPACK_IMPORTED_MODULE_5__","type","name","defaultValue","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","variant","value","onClick","Fragment","document","queryCommandSupported","react_copy_to_clipboard__WEBPACK_IMPORTED_MODULE_8__","text","onCopy","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","ListGroupItem_ListGroupItem","_React$Component","ListGroupItem","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","handleClick","event","_this$props","props","disabled","preventDefault","stopPropagation","inheritsLoose","prototype","render","_this$props2","bsPrefix","active","className","action","as","eventKey","objectWithoutPropertiesLoose","react_default","AbstractNavItem","esm_extends","SelectableContext","href","classnames_default","Component","defaultProps","es_ListGroupItem","ThemeProvider","ListGroup_ListGroup","ListGroup","AbstractNav","DecoratedListGroup","uncontrollable_default","activeKey"],"mappings":"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","file":"static/js/8.d0b8f38f.chunk.js","sourcesContent":["import React from \"react\";\nimport { fixture } from \"../../snippets\";\nimport MultiCodeCard from \"../../base_components/MultiCodeCard\";\n\nconst FixtureCard = () => (\n  <MultiCodeCard\n    cardTitle={fixture.title}\n    fullDocLink={fixture.fullDocLink}\n    codeSections={fixture.codeSections}\n  />\n);\n\nexport default FixtureCard;\n","import React, { useState } from \"react\";\nimport {\n  Card,\n  Button,\n  ButtonToolbar,\n  ToggleButtonGroup,\n  ToggleButton,\n  ListGroup\n} from \"react-bootstrap\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { CodeHighlight, MultiCodeHighlight } from \"./CodeHighlight\";\nimport CardHeader from \"../base_components/CardHeader\";\n\nconst CodeCard = ({ cardTitle, fullDocLink, codeSections }) => {\n  const [isShowingOptions, setIsShowingOptions] = useState(false);\n  const [isShowingExample, setIsShowingExample] = useState(false);\n\n  return (\n    <Card>\n      <CardHeader title={cardTitle} docLink={fullDocLink} />\n      {codeSections.map(({ description, language, code, options, example }) => (\n        <ListGroup key={description}>\n          <ListGroup.Item>\n            <Card.Body>\n              {description ? <Card.Text>{description}</Card.Text> : null}\n              <MultiCodeHighlight code={code} language={language} />\n            </Card.Body>\n            {options ? (\n              <Card.Body>\n                <Card.Title>Options</Card.Title>\n                <ButtonToolbar style={{ paddingBottom: \"10px\" }}>\n                  <ToggleButtonGroup\n                    type=\"radio\"\n                    name=\"options\"\n                    defaultValue={2}\n                  >\n                    <ToggleButton\n                      variant=\"outline-secondary\"\n                      value={1}\n                      onClick={() => setIsShowingOptions(true)}\n                    >\n                      Show\n                    </ToggleButton>\n                    <ToggleButton\n                      variant=\"outline-secondary\"\n                      value={2}\n                      onClick={() => setIsShowingOptions(false)}\n                    >\n                      Hide\n                    </ToggleButton>\n                  </ToggleButtonGroup>\n                </ButtonToolbar>\n                {isShowingOptions ? (\n                  <CodeHighlight language={language}>{options}</CodeHighlight>\n                ) : null}\n              </Card.Body>\n            ) : null}\n\n            {example ? (\n              <Card.Body>\n                <Card.Title>Example</Card.Title>\n                <ButtonToolbar style={{ paddingBottom: \"10px\" }}>\n                  <ToggleButtonGroup\n                    type=\"radio\"\n                    name=\"example\"\n                    defaultValue={2}\n                  >\n                    <ToggleButton\n                      variant=\"outline-secondary\"\n                      value={1}\n                      onClick={() => setIsShowingExample(true)}\n                    >\n                      Show\n                    </ToggleButton>\n                    <ToggleButton\n                      variant=\"outline-secondary\"\n                      value={2}\n                      onClick={() => setIsShowingExample(false)}\n                    >\n                      Hide\n                    </ToggleButton>\n                  </ToggleButtonGroup>\n                </ButtonToolbar>\n                {isShowingExample ? (\n                  <>\n                    <CodeHighlight language={language}>{example}</CodeHighlight>\n                    {document.queryCommandSupported(\"copy\") && (\n                      <CopyToClipboard text={code} onCopy={() => {}}>\n                        <Button variant=\"info\">Copy</Button>\n                      </CopyToClipboard>\n                    )}\n                  </>\n                ) : null}\n              </Card.Body>\n            ) : null}\n          </ListGroup.Item>\n        </ListGroup>\n      ))}\n    </Card>\n  );\n};\n\nexport default CodeCard;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { createBootstrapComponent } from './ThemeProvider';\n\nvar ListGroupItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ListGroupItem, _React$Component);\n\n  function ListGroupItem() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.handleClick = function (event) {\n      var _this$props = _this.props,\n          onClick = _this$props.onClick,\n          disabled = _this$props.disabled;\n\n      if (disabled) {\n        event.preventDefault();\n        event.stopPropagation();\n        return;\n      }\n\n      if (onClick) onClick(event);\n    };\n\n    return _this;\n  }\n\n  var _proto = ListGroupItem.prototype;\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        bsPrefix = _this$props2.bsPrefix,\n        active = _this$props2.active,\n        disabled = _this$props2.disabled,\n        className = _this$props2.className,\n        variant = _this$props2.variant,\n        action = _this$props2.action,\n        as = _this$props2.as,\n        eventKey = _this$props2.eventKey,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\"]);\n\n    return React.createElement(AbstractNavItem, _extends({}, props, {\n      eventKey: makeEventKey(eventKey, props.href) // eslint-disable-next-line\n      ,\n      as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n      onClick: this.handleClick,\n      className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n    }));\n  };\n\n  return ListGroupItem;\n}(React.Component);\n\nListGroupItem.defaultProps = {\n  variant: null,\n  active: false,\n  disabled: false\n};\nexport default createBootstrapComponent(ListGroupItem, 'list-group-item');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport uncontrollable from 'uncontrollable';\nimport { createBootstrapComponent } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\n\nvar ListGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ListGroup, _React$Component);\n\n  function ListGroup() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ListGroup.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        bsPrefix = _this$props.bsPrefix,\n        variant = _this$props.variant,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"bsPrefix\", \"variant\"]);\n\n    return React.createElement(AbstractNav, _extends({}, props, {\n      className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant)\n    }));\n  };\n\n  return ListGroup;\n}(React.Component);\n\nListGroup.defaultProps = {\n  as: 'div',\n  variant: null\n};\nvar DecoratedListGroup = uncontrollable(createBootstrapComponent(ListGroup, 'list-group'), {\n  activeKey: 'onSelect'\n});\nDecoratedListGroup.Item = ListGroupItem;\nexport default DecoratedListGroup;"],"sourceRoot":""}