{"version":3,"sources":["../node_modules/react-bootstrap/es/Table.js","base_components/TableCard.js","components/cards/BrowserSupportCard.js","snippets/install.js","snippets/simpleTest.js","snippets/runningTest.js","snippets/browserSupport.js","snippets/actions_click.js","snippets/actions_drag.js","snippets/actions_hover.js","snippets/actions_select.js","snippets/actions_typeText.js","snippets/actions_pressKey.js","snippets/actions_navigate.js","snippets/actions_resizeWindow.js","snippets/fixture.js","snippets/debug.js","snippets/assert_ok.js","snippets/assert_notOk.js","snippets/assert_deepEqual.js","snippets/assert_notDeepEqual.js","snippets/assert_contains.js","snippets/assert_notContains.js","snippets/index.js","base_components/CodeSyntaxHighlighter.js","base_components/CodeHighlight.js","base_components/BaseLink.js","base_components/CardHeader.js"],"names":["Table_Table","_React$Component","Table","apply","this","arguments","Object","inheritsLoose","prototype","render","_this$props","props","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","objectWithoutPropertiesLoose","classes","classnames_default","table","react_default","a","createElement","esm_extends","responsiveClass","Component","es_Table","ThemeProvider","TableCard","_ref","cardTitle","fullDocLink","headers","rows","Card","style","overflow","CardHeader","title","docLink","Body","map","header","key","row","cell","BrowserSupportCard","base_components_TableCard","browserSupport","browsers","browser","text","aliases","alias","CodeHighlight","language","snippet","code","description","example","options","codeSections","__webpack_require__","d","__webpack_exports__","install","simpleTest","runningTest","snippets_browserSupport","actions_click","actions_drag","actions_hover","actions_select","actions_typeText","actions_pressKey","actions_navigate","actions_resizeWindow","fixture","debug","assert_ok","assert_notOk","assert_deepEqual","assert_notDeepEqual","assert_contains","assert_notContains","CodeSyntaxHighlighter","children","default_highlight","vs2015","CodeHighlight_MultiCodeHighlight","CodeHighlight_CodeHighlight","Fragment","document","queryCommandSupported","lib","onCopy","cursor","base_components_CodeSyntaxHighlighter","MultiCodeHighlight","_ref2","codeItem","concat","substring","BaseLink","href","target","rel","Header","display","flexWrap","justifyContent","alignItems","base_components_BaseLink","Button"],"mappings":"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","file":"static/js/6.ab6080cd.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { createBootstrapComponent } from './ThemeProvider';\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Table, _React$Component);\n\n  function Table() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Table.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        className = _this$props.className,\n        striped = _this$props.striped,\n        bordered = _this$props.bordered,\n        borderless = _this$props.borderless,\n        hover = _this$props.hover,\n        size = _this$props.size,\n        variant = _this$props.variant,\n        responsive = _this$props.responsive,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n    var classes = classNames(bsPrefix, className, variant && bsPrefix + \"-\" + variant, size && bsPrefix + \"-\" + size, striped && bsPrefix + \"-striped\", bordered && bsPrefix + \"-bordered\", borderless && bsPrefix + \"-borderless\", hover && bsPrefix + \"-hover\");\n    var table = React.createElement(\"table\", _extends({}, props, {\n      className: classes\n    }));\n\n    if (responsive) {\n      var responsiveClass = bsPrefix + \"-responsive\";\n\n      if (typeof responsive === 'string') {\n        responsiveClass = responsiveClass + \"-\" + responsive;\n      }\n\n      return React.createElement(\"div\", {\n        className: responsiveClass\n      }, table);\n    }\n\n    return table;\n  };\n\n  return Table;\n}(React.Component);\n\nexport default createBootstrapComponent(Table, 'table');","import React from \"react\";\nimport { Card, Table } from \"react-bootstrap\";\nimport CardHeader from \"../base_components/CardHeader\";\n\nconst TableCard = ({ cardTitle, fullDocLink, headers, rows }) => {\n  return (\n    <Card style={{ overflow: \"auto\" }}>\n      <CardHeader title={cardTitle} docLink={fullDocLink} />\n      <Card.Body>\n        <Table>\n          <thead>\n            <tr>\n              {headers.map(header => (\n                <th key={header}>{header}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {rows.map(row => (\n              <tr key={row[0]}>\n                {row.map(cell => (\n                  <td key={cell}>{cell}</td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default TableCard;\n","import React from \"react\";\nimport TableCard from \"../../base_components/TableCard\";\nimport { CodeHighlight } from \"../../base_components/CodeHighlight\";\nimport { browserSupport } from \"../../snippets\";\n\nconst BrowserSupportCard = () => (\n  <TableCard\n    cardTitle={browserSupport.title}\n    fullDocLink={browserSupport.fullDocLink}\n    headers={[\"Browser\", \"Alias\"]}\n    rows={browserSupport.browsers.map(browser => [\n      browser.text,\n      browser.aliases.map(alias => (\n        <CodeHighlight key={alias} language=\"plaintext\">\n          {alias}\n        </CodeHighlight>\n      ))\n    ])}\n  />\n);\nexport default BrowserSupportCard;\n","const snippet = {\n  title: \"Install TestCafe\",\n  code: [`npm install -D testcafe`],\n  language: `plaintext`\n};\nexport default snippet;\n","const snippet = {\n  title: \"Simple Test\",\n  code: [\n    `import { Selector } from 'testcafe';\n    \n    fixture \\`Getting Started\\`\n      .page \\`http://devexpress.github.io/testcafe/example\\`;\n                \n    test('My first test', async t => {\n      // Test code\n    });`\n  ],\n  language: \"javascript\"\n};\nexport default snippet;\n","const snippet = {\n  title: \"Running a test on multiple browsers\",\n  code: [`testcafe chrome,firefox,edge src/tests/my.e2e.test.js`],\n  language: `plaintext`\n};\nexport default snippet;\n","const browserSupport = {\n  title: \"Browser Support\",\n  browsers: [\n    {\n      text: \"Google Chrome: Stable, Beta, Dev and Canary\",\n      aliases: [\"chromium\", \"chrome\", \"chrome-canary\", \"chrome:headless\"]\n    },\n    { text: \"Internet Explorer (11+)\", aliases: [\"ie\"] },\n    { text: \"Microsoft Edge\", aliases: [\"edge\"] },\n    { text: \"Mozilla Firefox\", aliases: [\"firefox\", \"firefox:headless\"] },\n    { text: \"Safari\", aliases: [\"safari\"] },\n    { text: \"Opera\", aliases: [\"opera\"] }\n  ],\n  fullDocLink:\n    \"https://devexpress.github.io/testcafe/documentation/using-testcafe/common-concepts/browsers/browser-support.html\"\n};\nexport default browserSupport;\n","const snippet = {\n  title: \"Click Action\",\n  description:\n    \"Click, Double-click, and Right-click a webpage element in a test.\",\n  code: [\n    \"t.click( selector [, options] )\",\n    \"t.doubleClick( selector [, options]\",\n    \"t.rightClick( selector [, options] ))\"\n  ],\n  language: `javascript`,\n  example: `import { Selector } from 'testcafe';\n\n    const avatar = Selector('#avatar');\n    const popupMenu = Selector('#popupMenu');\n    \n    fixture \\`My fixture\\`\n        .page \\`http://www.example.com/\\`;\n    \n    test('Click a check box and check its state', async t => {\n        await t\n            .click(avatar)\n            .expect(avatar.selected).ok();\n            .doubleClick(avatar)\n            .expect(avatar.visible).ok();\n            .rightClick(avatar)\n            .expect(popupMenu.exists).notOk();\n    });`,\n  options: `{\n      modifiers: {\n          ctrl: Boolean,\n          alt: Boolean,\n          shift: Boolean,\n          meta: Boolean\n      },\n  \n      offsetX: Number,\n      offsetY: Number,\n      destinationOffsetX: Number,\n      destinationOffsetY: Number,\n      speed: Number\n  }`,\n  fullDocLink:\n    \"https://devexpress.github.io/testcafe/documentation/test-api/actions/click.html\"\n};\n\nexport default snippet;\n","const snippet = {\n  title: \"Drag Action\",\n  description: \"Drag a webpage element in a test.\",\n  code: [\n    \"t.drag( selector, dragOffsetX, dragOffsetY [, options] )\",\n    \"t.dragToElement( selector, destinationSelector [, options] )\"\n  ],\n  language: `javascript`,\n  example: `import { Selector } from 'testcafe';\n\n  const slider = Selector('#developer-rating');\n  \n  fixture \\`My fixture\\`\n      .page \\`http://www.example.com/\\`;\n  \n  test('Drag slider', async t => {\n      await t\n          .click('#i-tried-testcafe');\n          .expect(slider.value).eql(1)\n          .drag('.ui-slider-handle', 360, 0, { offsetX: 10, offsetY: 10 })\n          .expect(slider.value).eql(7);\n          .dragToElement('.ui-slider-handle', '.developer-rating-best')\n          .expect(slider.value).eql(10);\n  });`,\n  options: `{\n      modifiers: {\n          ctrl: Boolean,\n          alt: Boolean,\n          shift: Boolean,\n          meta: Boolean\n      },\n  \n      offsetX: Number,\n      offsetY: Number,\n      destinationOffsetX: Number,\n      destinationOffsetY: Number,\n      speed: Number\n  }`,\n  fullDocLink:\n    \"https://devexpress.github.io/testcafe/documentation/test-api/actions/drag-element.html\"\n};\n\nexport default snippet;\n","const snippet = {\n  title: \"Hover Action\",\n  description: \"Hovers the mouse pointer over a webpage element.\",\n  code: [\"t.hover( selector [, options] )\"],\n  language: `javascript`,\n  example: `import { Selector } from 'testcafe';\n\n  const comboBox = Selector('.combo-box');\n  \n  fixture \\`My fixture\\`\n      .page \\`http://www.example.com/\\`;\n  \n  test('Select combo box value', async t => {\n      await t\n          .hover(comboBox)\n          .click('#i-prefer-both')\n          .expect(comboBox.value).eql('Both');\n  });`,\n  options: `{\n      modifiers: {\n          ctrl: Boolean,\n          alt: Boolean,\n          shift: Boolean,\n          meta: Boolean\n      },\n  \n      offsetX: Number,\n      offsetY: Number,\n      destinationOffsetX: Number,\n      destinationOffsetY: Number,\n      speed: Number\n  }`,\n  fullDocLink:\n    \"https://devexpress.github.io/testcafe/documentation/test-api/actions/hover.html\"\n};\n\nexport default snippet;\n","const snippet = {\n  title: \"Select Action\",\n  codeSections: [\n    {\n      description: \"Selects text in input elements of various types\",\n      code: [\"t.selectText( selector [, startPos] [, endPos] [, options] )\"],\n      language: `javascript`,\n      example: `import { ClientFunction, Selector } from 'testcafe';\n\n      fixture \\`My fixture\\`\n          .page \\`http://devexpress.github.io/testcafe/example/\\`;\n      \n      const developerNameInput = Selector('#developer-name');\n      \n      const getElementSelectionStart = ClientFunction(selector => selector().selectionStart);\n      const getElementSelectionEnd   = ClientFunction(selector => selector().selectionEnd);\n      \n      test('Select text within input', async t => {\n          await t\n              .typeText(developerNameInput, 'Test Cafe', { caretPos: 0 })\n              .selectText(developerNameInput, 7, 1);\n      \n          await t\n              .expect(await getElementSelectionStart(developerNameInput)).eql(1)\n              .expect(await getElementSelectionEnd(developerNameInput)).eql(7);\n      });`,\n      options: `{ speed: Number }`\n    },\n    {\n      description: \"Select text within a <textarea> element\",\n      code: [\n        \"t.selectTextAreaContent( selector [, startLine] [, startPos] [, endLine] [, endPos] [, options] )\"\n      ],\n      language: `javascript`,\n      example: `import { ClientFunction, Selector } from 'testcafe';\n\n      fixture \\`My fixture\\`\n          .page \\`http://devexpress.github.io/testcafe/example/\\`;\n      \n      const commentTextArea = Selector('#comments');\n      \n      const getElementSelectionStart = ClientFunction(selector => selector().selectionStart);\n      const getElementSelectionEnd   = ClientFunction(selector => selector().selectionEnd);\n      \n      test('Select text within textarea', async t => {\n          await t\n              .click('#tried-test-cafe')\n              .typeText(commentTextArea, [\n                  'Lorem ipsum dolor sit amet',\n                  'consectetur adipiscing elit',\n                  'sed do eiusmod tempor'\n              ].join(',\\n'))\n              .selectTextAreaContent(commentTextArea, 0, 5, 2, 10);\n      \n          await t\n              .expect(await getElementSelectionStart(commentTextArea)).eql(5)\n              .expect(await getElementSelectionEnd(commentTextArea)).eql(67);\n      });`,\n      options: `{ speed: Number }`\n    },\n    {\n      description:\n        \"Select HTML elements that have the contentEditable attribute enabled.\",\n      code: [\n        \"t.selectEditableContent( startSelector, endSelector [, options] )\"\n      ],\n      language: `javascript`,\n      example: `import { Selector } from 'testcafe';\n\n      fixture \\`My fixture\\`\n          .page \\`http://www.example.com/\\`;\n      \n      test('Delete text within a contentEditable element', async t => {\n          await t\n              .selectEditableContent('#foreword', '#chapter-3')\n              .pressKey('delete')\n              .expect(Selector('#chapter-2').exists).notOk()\n              .expect(Selector('#chapter-4').exists).ok();\n      });`,\n      options: `{ speed: Number }`\n    }\n  ],\n  fullDocLink:\n    \"https://devexpress.github.io/testcafe/documentation/test-api/actions/select-text.html\"\n};\n\nexport default snippet;\n","const snippet = {\n  title: \"Typing Action\",\n  description: \"Types the specified text into an input element.\",\n  code: [\"t.typeText( selector, text [, options] )\"],\n  language: `javascript`,\n  example: `import { Selector } from 'testcafe';\n\n  const nameInput = Selector('#developer-name');\n  \n  fixture \\`My fixture\\`\n      .page \\`http://www.example.com/\\`;\n  \n  test('Type and Replace', async t => {\n      await t\n          .typeText(nameInput, 'Tony')\n          .typeText(nameInput, 'Stak', { replace: true })\n          .typeText(nameInput, 'r', { caretPos: 3 })\n          .expect(nameInput.value).eql('Stark');\n  });`,\n  options: `{\n    modifiers: {\n        ctrl: Boolean,\n        alt: Boolean,\n        shift: Boolean,\n        meta: Boolean\n    },\n\n    offsetX: Number,\n    offsetY: Number,\n    caretPos: Number,\n    replace: Boolean,\n    paste: Boolean,\n    speed: Number\n}`,\n  fullDocLink:\n    \"https://devexpress.github.io/testcafe/documentation/test-api/actions/type-text.html\"\n};\n\nexport default snippet;\n","const snippet = {\n  title: \"Press Key Action\",\n  description: \"Presses the specified keyboard keys.\",\n  code: [\"t.pressKey( keys [, options] )\"],\n  language: `javascript`,\n  example: `import { Selector } from 'testcafe';\n\n  const nameInput = Selector('#developer-name');\n  \n  fixture \\`My fixture\\`\n      .page \\`http://www.example.com/\\`;\n  \n  test('Key Presses', async t => {\n      await t\n          .typeText(nameInput, 'Tony Stark')\n          .pressKey('home right . delete delete delete')\n          .expect(nameInput.value).eql('T. Stark');\n  });`,\n  options: `{\n    speed: Number\n}`,\n  fullDocLink:\n    \"https://devexpress.github.io/testcafe/documentation/test-api/actions/press-key.html\"\n};\n\nexport default snippet;\n","const snippet = {\n  title: \"Navigation Action\",\n  description: \"Navigates to the specified URL.\",\n  code: [\"t.navigateTo( url )\"],\n  language: `javascript`,\n  example: `fixture \\`My fixture\\`\n  .page \\`http://www.example.com/\\`;\n\ntest('Navigate to the main page', async t => {\n  await t\n      .click('#submit-button')\n      .navigateTo('http://devexpress.github.io/testcafe');\n});\ntest('Navigate to local pages', async t => {\n  await t\n      .navigateTo('file:///user/my-website/index.html')\n      .navigateTo('../my-project/index.html');\n});`,\n\n  fullDocLink:\n    \"https://devexpress.github.io/testcafe/documentation/test-api/actions/navigate.html\"\n};\n\nexport default snippet;\n","const snippet = {\n  title: \"Resize Window Action\",\n  description:\n    \"Resize the window to a specific pixel dimension, or to fit on the screen of the specified mobile device, or just to maximise\",\n  code: [\n    \"t.resizeWindow( width, height )\",\n    \"t.resizeWindowToFitDevice( deviceName [, options] )\",\n    \"t.maximizeWindow( )\"\n  ],\n  language: `javascript`,\n  example: `import { Selector } from 'testcafe';\n\n  const menu = Selector('#side-menu');\n    \n  fixture \\`My fixture\\`\n    .page \\`http://www.example.com/\\`;\n    \n  test('Side menu disappears on small screens', async t => {\n    await t\n      .resizeWindow(200, 100)\n      .expect(menu.getStyleProperty('display')).eql('none');\n  });\n    \n  test('Header is displayed on Xperia Z in portrait', async t => {\n    await t\n      .resizeWindowToFitDevice('Sony Xperia Z', {\n        portraitOrientation: true\n      })\n      .expect(header.getStyleProperty('display')).notEql('none');\n  });\n    \n  test('Side menu is displayed in full screen', async t => {\n    await t\n      .maximizeWindow()\n      .expect(menu.visible).ok();\n  });`,\n  options: `{\n    portraitOrientation: Boolean\n    /** true for portrait - false for landscape\n  }`,\n  fullDocLink:\n    \"https://devexpress.github.io/testcafe/documentation/test-api/actions/resize-window.html\"\n};\n\nexport default snippet;\n","const snippet = {\n  title: \"Fixtures\",\n  codeSections: [\n    {\n      description:\n        \"TestCafe tests must be organized into categories called fixtures. They accept a String parameter\",\n      code: [\"fixture( fixtureName )\", \"fixture `fixtureName`\"],\n      language: `javascript`\n    },\n    {\n      description:\n        \"Specify the web page URL as a String parameter where all tests in a fixture start.\",\n      code: [\"fixture.page( url )\", \"fixture.page `url`\"],\n      language: `javascript`\n    },\n    {\n      description:\n        \"Specify additional information for tests in the form of key-value metadata and use it in reports.\",\n      code: [\n        \"fixture.meta({ key1: 'value1', key2: 'value2', key3: 'value3' })\"\n      ],\n      language: `javascript`\n    },\n    {\n      description:\n        \"Fixture hooks that execute a function before/after each test run\",\n      code: [\"fixture.before( fn(ctx) )\", \"fixture.after( fn(ctx) )\"],\n      language: `javascript`\n    },\n    {\n      description: \"Test hooks that execute a function before/after each test.\",\n      code: [\"fixture.beforeEach( fn(t) )\", \"fixture.afterEach( fn(t) )\"],\n      language: `javascript`\n    },\n    {\n      description: \"Skip a feature from execution.\",\n      code: [\"fixture.skip\"],\n      language: `javascript`\n    },\n    {\n      description: \"Only execute a specific feature.\",\n      code: [\"fixture.only\"],\n      language: `javascript`\n    }\n  ],\n  fullDocLink:\n    \"https://devexpress.github.io/testcafe/documentation/test-api/test-code-structure.html#fixtures\"\n};\n\nexport default snippet;\n","const snippet = {\n  title: \"Debug\",\n  description:\n    \"Pauses the test and allows you to debug using the browser's developer tools.\",\n  code: [\"t.debug()\"],\n  language: `javascript`,\n  example: `fixture \\`Debugger example\\`\n  .page \\`http://devexpress.github.io/testcafe/example/\\`;\n\ntest('Debugger', async t => {\n  await t\n      .debug()\n      .click('#populate')\n      .click('#submit-button');\n});`,\n\n  fullDocLink:\n    \"https://devexpress.github.io/testcafe/documentation/test-api/debugging.html\"\n};\n\nexport default snippet;\n","const snippet = {\n  title: \"Ok - Assert\",\n  description: \"Asserts that actual is true.\",\n  code: [\"t.expect( actual ).ok( message, options );\"],\n  language: `javascript`,\n  example: `import { Selector } from 'testcafe';\n\n  fixture \\`My fixture\\`;\n  \n  test('My test', async t => {\n      await t\n        .expect(Selector('#element').exists).ok()\n        .expect('ok').ok('this assertion will pass')\n        .expect(false).ok('this assertion will fail');\n  });`,\n  options: `{ \n    timeout: Number,\n      allowUnawaitedPromise: Boolean \n  }`,\n  fullDocLink:\n    \"https://devexpress.github.io/testcafe/documentation/test-api/assertions/assertion-api.html#ok\"\n};\n\nexport default snippet;\n","const snippet = {\n  title: \"Not Ok - Assert\",\n  description: \"Asserts that actual is false.\",\n  code: [\"t.expect( actual ).notOk( message, options );\"],\n  language: `javascript`,\n  example: `import { Selector } from 'testcafe';\n\n  fixture \\`My fixture\\`;\n  \n  test('My test', async t => {\n      await t\n        .expect(Selector('#element').exists).notOk()\n        .expect('ok').notOk('this assertion will fail')\n        .expect(false).notOk('this assertion will pass');\n  });`,\n  options: `{ \n    timeout: Number,\n      allowUnawaitedPromise: Boolean \n  }`,\n  fullDocLink:\n    \"https://devexpress.github.io/testcafe/documentation/test-api/assertions/assertion-api.html#not-ok\"\n};\n\nexport default snippet;\n","const snippet = {\n  title: \"Deep Equal - Assert\",\n  description: \"Asserts that actual is equal to expected.\",\n  code: [\"t.expect( actual ).eql( expected, message, options );\"],\n  language: `javascript`,\n  example: `import { Selector } from 'testcafe';\n\n  fixture \\`My fixture\\`;\n  \n  test('My test', async t => {\n      await t\n        .expect(Selector('.className').count).eql(3)\n        .expect({ a: 'bar' }).eql({ a: 'bar' }, 'this assertion will pass')\n        .expect({ a: 'bar' }).eql({ a: 'foo' }, 'this assertion will fail');\n  });`,\n  options: `{ \n    timeout: Number,\n      allowUnawaitedPromise: Boolean \n  }`,\n  fullDocLink:\n    \"https://devexpress.github.io/testcafe/documentation/test-api/assertions/assertion-api.html#deep-equal\"\n};\n\nexport default snippet;\n","const snippet = {\n  title: \"Not Deep Equal - Assert\",\n  description: \"Asserts that actual is not equal to expected.\",\n  code: [\"t.expect( actual ).notEql( unexpected, message, options );\"],\n  language: `javascript`,\n  example: `import { Selector } from 'testcafe';\n\n  fixture \\`My fixture\\`;\n  \n  test('My test', async t => {\n      await t\n        .expect(Selector('.className').count).notEql(2)\n        .expect({ a: 'bar' }).notEql({ a: 'bar' }, 'this assertion will fail')\n        .expect({ a: 'bar' }).notEql({ a: 'foo' }, 'this assertion will pass');\n  });`,\n  options: `{ \n    timeout: Number,\n      allowUnawaitedPromise: Boolean \n  }`,\n  fullDocLink:\n    \"https://devexpress.github.io/testcafe/documentation/test-api/assertions/assertion-api.html#not-deep-equal\"\n};\n\nexport default snippet;\n","const snippet = {\n  title: \"Contains - Assert\",\n  description: \"Asserts that actual is not equal to expected.\",\n  code: [\"t.expect( actual ).contains( expected, message, options );\"],\n  language: `javascript`,\n  example: `import { ClientFunction } from 'testcafe';\n\n  fixture \\`My fixture\\`;\n  \n  test('My test', async t => {\n    const getLocation = ClientFunction(() => document.location.href.toString());\n\n    await t\n        .expect(getLocation()).contains('example.com')\n        .expect('foo bar').contains('bar', 'string contains the expected substring')\n        .expect([1, 2, 3]).contains(2, 'array contains the expected value')\n        .expect({ foo: 'bar', hello: 'universe' }).contains({ foo: 'bar' }, 'object contains the expected property');\n  });`,\n  options: `{ \n    timeout: Number,\n      allowUnawaitedPromise: Boolean \n  }`,\n  fullDocLink:\n    \"https://devexpress.github.io/testcafe/documentation/test-api/assertions/assertion-api.html#contains\"\n};\n\nexport default snippet;\n","const snippet = {\n  title: \"Not Contains - Assert\",\n  description: \"Asserts that actual does not contain expected.\",\n  code: [\"t.expect( actual ).notContains( unexpected, message, options );\"],\n  language: `javascript`,\n  example: `import { ClientFunction } from 'testcafe';\n\n  fixture \\`My fixture\\`;\n  \n  test('My test', async t => {\n    const getLocation = ClientFunction(() => document.location.href.toString());\n\n    await t\n        .expect(getLocation()).notContains('google.com')\n        .expect('foo bar').notContains('baz', 'string does not contain a substring')\n        .expect([1, 2, 3]).notContains(4, 'array does not contain a value')\n        .expect({ foo: 'bar', hello: 'universe' }).notContains({ buzz: 'abc' }, 'object does not contain a property');\n  });`,\n  options: `{ \n    timeout: Number,\n      allowUnawaitedPromise: Boolean \n  }`,\n  fullDocLink:\n    \"https://devexpress.github.io/testcafe/documentation/test-api/assertions/assertion-api.html#not-contains\"\n};\n\nexport default snippet;\n","export { default as install } from \"./install\";\nexport { default as simpleTest } from \"./simpleTest\";\nexport { default as runningTest } from \"./runningTest\";\nexport { default as browserSupport } from \"./browserSupport\";\nexport { default as actions_click } from \"./actions_click\";\nexport { default as actions_drag } from \"./actions_drag\";\nexport { default as actions_hover } from \"./actions_hover\";\nexport { default as actions_select } from \"./actions_select\";\nexport { default as actions_typeText } from \"./actions_typeText\";\nexport { default as actions_pressKey } from \"./actions_pressKey\";\nexport { default as actions_navigate } from \"./actions_navigate\";\nexport { default as actions_resizeWindow } from \"./actions_resizeWindow\";\nexport { default as fixture } from \"./fixture\";\nexport { default as debug } from \"./debug\";\nexport { default as assert_within } from \"./assert_within\";\nexport { default as assert_notWithin } from \"./assert_notWithin\";\nexport { default as assert_ok } from \"./assert_ok\";\nexport { default as assert_notOk } from \"./assert_notOk\";\nexport { default as assert_typeOf } from \"./assert_typeOf\";\nexport { default as assert_notTypeOf } from \"./assert_notTypeOf\";\nexport { default as assert_deepEqual } from \"./assert_deepEqual\";\nexport { default as assert_notDeepEqual } from \"./assert_notDeepEqual\";\nexport { default as assert_match } from \"./assert_match\";\nexport { default as assert_notMatch } from \"./assert_notMatch\";\nexport { default as assert_contains } from \"./assert_contains\";\nexport { default as assert_notContains } from \"./assert_notContains\";\nexport { default as assert_lessThan } from \"./assert_lessThan\";\nexport { default as assert_lessThanEqualTo } from \"./assert_lessThanEqualTo\";\nexport { default as assert_greaterThan } from \"./assert_greaterThan\";\nexport {\n  default as assert_greaterThanEqualTo\n} from \"./assert_greaterThanEqualTo\";\n","import React from \"react\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { vs2015 } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nconst CodeSyntaxHighlighter = props => {\n  const { children, language } = props;\n  return (\n    <SyntaxHighlighter language={language} style={vs2015}>\n      {children}\n    </SyntaxHighlighter>\n  );\n};\n\nexport default CodeSyntaxHighlighter;\n","import React from \"react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport CodeSyntaxHighlighter from \"./CodeSyntaxHighlighter\";\n\nconst CodeHighlight = ({ children, language }) => (\n  <>\n    {document.queryCommandSupported(\"copy\") ? (\n      <CopyToClipboard text={children} onCopy={() => {}}>\n        <div style={{ cursor: \"copy\" }}>\n          <CodeSyntaxHighlighter language={language}>\n            {children}\n          </CodeSyntaxHighlighter>\n        </div>\n      </CopyToClipboard>\n    ) : (\n      <CodeSyntaxHighlighter language={language}>\n        {children}\n      </CodeSyntaxHighlighter>\n    )}\n  </>\n);\n\nconst MultiCodeHighlight = ({ code, language }) => (\n  <>\n    {code.map(codeItem => (\n      <CodeHighlight\n        key={`${language}-${codeItem.substring(0, 24)}`}\n        language={language}\n      >\n        {codeItem}\n      </CodeHighlight>\n    ))}\n  </>\n);\n\nexport { MultiCodeHighlight, CodeHighlight };\n","import React from \"react\";\n\nconst BaseLink = ({ href, children }) => (\n  <a href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n    {children}\n  </a>\n);\n\nexport default BaseLink;\n","import React from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport BaseLink from \"./BaseLink\";\n\nconst CardHeader = ({ docLink, title }) => (\n  <Card.Header>\n    <div\n      style={{\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n      }}\n    >\n      {title}\n      {docLink && (\n        <BaseLink href={docLink}>\n          <Button variant=\"info\">Documentation</Button>\n        </BaseLink>\n      )}\n    </div>\n  </Card.Header>\n);\n\nexport default CardHeader;\n"],"sourceRoot":""}