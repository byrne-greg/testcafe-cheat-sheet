{"version":3,"sources":["../node_modules/react-bootstrap/es/Table.js","base_components/TableCard.js","components/cards/BrowserSupportCard.js","snippets/install.js","snippets/simpleTest.js","snippets/runningTest.js","snippets/browserSupport.js","snippets/actions_click.js","snippets/actions_drag.js","snippets/actions_hover.js","snippets/actions_select.js","snippets/actions_typeText.js","snippets/fixture.js","snippets/index.js","base_components/CodeSyntaxHighlighter.js","base_components/CodeHighlight.js","base_components/CardLink.js"],"names":["Table_Table","_React$Component","Table","apply","this","arguments","Object","inheritsLoose","prototype","render","_this$props","props","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","objectWithoutPropertiesLoose","classes","classnames_default","table","react_default","a","createElement","esm_extends","responsiveClass","Component","es_Table","ThemeProvider","TableCard","_ref","cardTitle","headers","rows","Card","style","overflow","Header","Body","map","header","key","row","cell","BrowserSupportCard","base_components_TableCard","CardLink","href","browserSupport","fullDocLink","text","title","browsers","browser","aliases","alias","CodeHighlight","language","snippet","code","description","example","options","codeSections","__webpack_require__","d","__webpack_exports__","install","simpleTest","runningTest","snippets_browserSupport","actions_click","actions_drag","actions_hover","actions_select","actions_typeText","fixture","CodeSyntaxHighlighter","children","default_highlight","CodeHighlight_MultiCodeHighlight","CodeHighlight_CodeHighlight","Fragment","document","queryCommandSupported","lib","onCopy","cursor","base_components_CodeSyntaxHighlighter","MultiCodeHighlight","_ref2","codeItem","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_bootstrap__WEBPACK_IMPORTED_MODULE_1__","withPreceedingSpace","withSucceedingSpace","displayText","concat","Link","target","rel"],"mappings":"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","file":"static/js/14.943fa5f9.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { createBootstrapComponent } from './ThemeProvider';\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Table, _React$Component);\n\n  function Table() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Table.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        className = _this$props.className,\n        striped = _this$props.striped,\n        bordered = _this$props.bordered,\n        borderless = _this$props.borderless,\n        hover = _this$props.hover,\n        size = _this$props.size,\n        variant = _this$props.variant,\n        responsive = _this$props.responsive,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n    var classes = classNames(bsPrefix, className, variant && bsPrefix + \"-\" + variant, size && bsPrefix + \"-\" + size, striped && bsPrefix + \"-striped\", bordered && bsPrefix + \"-bordered\", borderless && bsPrefix + \"-borderless\", hover && bsPrefix + \"-hover\");\n    var table = React.createElement(\"table\", _extends({}, props, {\n      className: classes\n    }));\n\n    if (responsive) {\n      var responsiveClass = bsPrefix + \"-responsive\";\n\n      if (typeof responsive === 'string') {\n        responsiveClass = responsiveClass + \"-\" + responsive;\n      }\n\n      return React.createElement(\"div\", {\n        className: responsiveClass\n      }, table);\n    }\n\n    return table;\n  };\n\n  return Table;\n}(React.Component);\n\nexport default createBootstrapComponent(Table, 'table');","import React from \"react\";\nimport { Card, Table } from \"react-bootstrap\";\n\nconst TableCard = ({ cardTitle, headers, rows }) => {\n  return (\n    <Card style={{ overflow: \"auto\" }}>\n      <Card.Header>{cardTitle}</Card.Header>\n      <Card.Body>\n        <Table>\n          <thead>\n            <tr>\n              {headers.map(header => (\n                <th key={header}>{header}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {rows.map(row => (\n              <tr key={row[0]}>\n                {row.map(cell => (\n                  <td key={cell}>{cell}</td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default TableCard;\n","import React from \"react\";\nimport TableCard from \"../../base_components/TableCard\";\nimport CardLink from \"../../base_components/CardLink\";\nimport { CodeHighlight } from \"../../base_components/CodeHighlight\";\nimport { browserSupport } from \"../../snippets\";\n\nconst BrowserSupportCard = () => (\n  <TableCard\n    cardTitle={\n      <CardLink href={browserSupport.fullDocLink} text={browserSupport.title} />\n    }\n    headers={[\"Browser\", \"Alias\"]}\n    rows={browserSupport.browsers.map(browser => [\n      browser.text,\n      browser.aliases.map(alias => (\n        <CodeHighlight key={alias} language=\"plaintext\">\n          {alias}\n        </CodeHighlight>\n      ))\n    ])}\n  />\n);\nexport default BrowserSupportCard;\n","const snippet = {\n  title: \"Install TestCafe\",\n  code: [`npm install -D testcafe`],\n  language: `plaintext`\n};\nexport default snippet;\n","const snippet = {\n  title: \"Simple Test\",\n  code: [\n    `import { Selector } from 'testcafe';\n    \n    fixture \\`Getting Started\\`\n      .page \\`http://devexpress.github.io/testcafe/example\\`;\n                \n    test('My first test', async t => {\n      // Test code\n    });`\n  ],\n  language: \"javascript\"\n};\nexport default snippet;\n","const snippet = {\n  title: \"Running a test on multiple browsers\",\n  code: [`testcafe chrome,firefox,edge src/tests/my.e2e.test.js`],\n  language: `plaintext`\n};\nexport default snippet;\n","const browserSupport = {\n  title: \"Browser Support\",\n  browsers: [\n    {\n      text: \"Google Chrome: Stable, Beta, Dev and Canary\",\n      aliases: [\"chromium\", \"chrome\", \"chrome-canary\", \"chrome:headless\"]\n    },\n    { text: \"Internet Explorer (11+)\", aliases: [\"ie\"] },\n    { text: \"Microsoft Edge\", aliases: [\"edge\"] },\n    { text: \"Mozilla Firefox\", aliases: [\"firefox\", \"firefox:headless\"] },\n    { text: \"Safari\", aliases: [\"safari\"] },\n    { text: \"Opera\", aliases: [\"opera\"] }\n  ],\n  fullDocLink:\n    \"https://devexpress.github.io/testcafe/documentation/using-testcafe/common-concepts/browsers/browser-support.html\"\n};\nexport default browserSupport;\n","const snippet = {\n  title: \"Click Action\",\n  description:\n    \"Click, Double-click, and Right-click a webpage element in a test.\",\n  code: [\n    \"t.click( selector [, options] )\",\n    \"t.doubleClick( selector [, options]\",\n    \"t.rightClick( selector [, options] ))\"\n  ],\n  language: `javascript`,\n  example: `import { Selector } from 'testcafe';\n\n    const avatar = Selector('#avatar');\n    const popupMenu = Selector('#popupMenu');\n    \n    fixture \\`My fixture\\`\n        .page \\`http://www.example.com/\\`;\n    \n    test('Click a check box and check its state', async t => {\n        await t\n            .click(avatar)\n            .expect(avatar.selected).ok();\n            .doubleClick(avatar)\n            .expect(avatar.visible).ok();\n            .rightClick(avatar)\n            .expect(popupMenu.exists).notOk();\n    });`,\n  options: `{\n      modifiers: {\n          ctrl: Boolean,\n          alt: Boolean,\n          shift: Boolean,\n          meta: Boolean\n      },\n  \n      offsetX: Number,\n      offsetY: Number,\n      destinationOffsetX: Number,\n      destinationOffsetY: Number,\n      speed: Number\n  }`,\n  fullDocLink:\n    \"https://devexpress.github.io/testcafe/documentation/test-api/actions/click.html\"\n};\n\nexport default snippet;\n","const snippet = {\n  title: \"Drag Action\",\n  description: \"Drag a webpage element in a test.\",\n  code: [\n    \"t.drag( selector, dragOffsetX, dragOffsetY [, options] )\",\n    \"t.dragToElement( selector, destinationSelector [, options] )\"\n  ],\n  language: `javascript`,\n  example: `import { Selector } from 'testcafe';\n\n  const slider = Selector('#developer-rating');\n  \n  fixture \\`My fixture\\`\n      .page \\`http://www.example.com/\\`;\n  \n  test('Drag slider', async t => {\n      await t\n          .click('#i-tried-testcafe');\n          .expect(slider.value).eql(1)\n          .drag('.ui-slider-handle', 360, 0, { offsetX: 10, offsetY: 10 })\n          .expect(slider.value).eql(7);\n          .dragToElement('.ui-slider-handle', '.developer-rating-best')\n          .expect(slider.value).eql(10);\n  });`,\n  options: `{\n      modifiers: {\n          ctrl: Boolean,\n          alt: Boolean,\n          shift: Boolean,\n          meta: Boolean\n      },\n  \n      offsetX: Number,\n      offsetY: Number,\n      destinationOffsetX: Number,\n      destinationOffsetY: Number,\n      speed: Number\n  }`,\n  fullDocLink:\n    \"https://devexpress.github.io/testcafe/documentation/test-api/actions/drag-element.html\"\n};\n\nexport default snippet;\n","const snippet = {\n  title: \"Hover Action\",\n  description: \"Hovers the mouse pointer over a webpage element.\",\n  code: [\"t.hover( selector [, options] )\"],\n  language: `javascript`,\n  example: `import { Selector } from 'testcafe';\n\n  const comboBox = Selector('.combo-box');\n  \n  fixture \\`My fixture\\`\n      .page \\`http://www.example.com/\\`;\n  \n  test('Select combo box value', async t => {\n      await t\n          .hover(comboBox)\n          .click('#i-prefer-both')\n          .expect(comboBox.value).eql('Both');\n  });`,\n  options: `{\n      modifiers: {\n          ctrl: Boolean,\n          alt: Boolean,\n          shift: Boolean,\n          meta: Boolean\n      },\n  \n      offsetX: Number,\n      offsetY: Number,\n      destinationOffsetX: Number,\n      destinationOffsetY: Number,\n      speed: Number\n  }`,\n  fullDocLink:\n    \"https://devexpress.github.io/testcafe/documentation/test-api/actions/hover.html\"\n};\n\nexport default snippet;\n","const snippet = {\n  title: \"Select Action\",\n  codeSections: [\n    {\n      description: \"Selects text in input elements of various types\",\n      code: [\"t.selectText( selector [, startPos] [, endPos] [, options] )\"],\n      language: `javascript`,\n      example: `import { ClientFunction, Selector } from 'testcafe';\n\n      fixture \\`My fixture\\`\n          .page \\`http://devexpress.github.io/testcafe/example/\\`;\n      \n      const developerNameInput = Selector('#developer-name');\n      \n      const getElementSelectionStart = ClientFunction(selector => selector().selectionStart);\n      const getElementSelectionEnd   = ClientFunction(selector => selector().selectionEnd);\n      \n      test('Select text within input', async t => {\n          await t\n              .typeText(developerNameInput, 'Test Cafe', { caretPos: 0 })\n              .selectText(developerNameInput, 7, 1);\n      \n          await t\n              .expect(await getElementSelectionStart(developerNameInput)).eql(1)\n              .expect(await getElementSelectionEnd(developerNameInput)).eql(7);\n      });`,\n      options: `{ speed: Number }`\n    },\n    {\n      description: \"Select text within a <textarea> element\",\n      code: [\n        \"t.selectTextAreaContent( selector [, startLine] [, startPos] [, endLine] [, endPos] [, options] )\"\n      ],\n      language: `javascript`,\n      example: `import { ClientFunction, Selector } from 'testcafe';\n\n      fixture \\`My fixture\\`\n          .page \\`http://devexpress.github.io/testcafe/example/\\`;\n      \n      const commentTextArea = Selector('#comments');\n      \n      const getElementSelectionStart = ClientFunction(selector => selector().selectionStart);\n      const getElementSelectionEnd   = ClientFunction(selector => selector().selectionEnd);\n      \n      test('Select text within textarea', async t => {\n          await t\n              .click('#tried-test-cafe')\n              .typeText(commentTextArea, [\n                  'Lorem ipsum dolor sit amet',\n                  'consectetur adipiscing elit',\n                  'sed do eiusmod tempor'\n              ].join(',\\n'))\n              .selectTextAreaContent(commentTextArea, 0, 5, 2, 10);\n      \n          await t\n              .expect(await getElementSelectionStart(commentTextArea)).eql(5)\n              .expect(await getElementSelectionEnd(commentTextArea)).eql(67);\n      });`,\n      options: `{ speed: Number }`\n    },\n    {\n      description:\n        \"Select HTML elements that have the contentEditable attribute enabled.\",\n      code: [\n        \"t.selectEditableContent( startSelector, endSelector [, options] )\"\n      ],\n      language: `javascript`,\n      example: `import { Selector } from 'testcafe';\n\n      fixture \\`My fixture\\`\n          .page \\`http://www.example.com/\\`;\n      \n      test('Delete text within a contentEditable element', async t => {\n          await t\n              .selectEditableContent('#foreword', '#chapter-3')\n              .pressKey('delete')\n              .expect(Selector('#chapter-2').exists).notOk()\n              .expect(Selector('#chapter-4').exists).ok();\n      });`,\n      options: `{ speed: Number }`\n    }\n  ],\n  fullDocLink:\n    \"https://devexpress.github.io/testcafe/documentation/test-api/actions/select-text.html\"\n};\n\nexport default snippet;\n","const snippet = {\n  title: \"Typing Action\",\n  description: \"Types the specified text into an input element.\",\n  code: [\"t.typeText( selector, text [, options] )\"],\n  language: `javascript`,\n  example: `import { Selector } from 'testcafe';\n\n  const nameInput = Selector('#developer-name');\n  \n  fixture \\`My fixture\\`\n      .page \\`http://www.example.com/\\`;\n  \n  test('Type and Replace', async t => {\n      await t\n          .typeText(nameInput, 'Tony')\n          .typeText(nameInput, 'Stak', { replace: true })\n          .typeText(nameInput, 'r', { caretPos: 3 })\n          .expect(nameInput.value).eql('Stark');\n  });`,\n  options: `{\n    modifiers: {\n        ctrl: Boolean,\n        alt: Boolean,\n        shift: Boolean,\n        meta: Boolean\n    },\n\n    offsetX: Number,\n    offsetY: Number,\n    caretPos: Number,\n    replace: Boolean,\n    paste: Boolean,\n    speed: Number\n}`,\n  fullDocLink:\n    \"https://devexpress.github.io/testcafe/documentation/test-api/actions/type-text.html\"\n};\n\nexport default snippet;\n","const snippet = {\n  title: \"Fixtures\",\n  codeSections: [\n    {\n      description:\n        \"TestCafe tests must be organized into categories called fixtures. They accept a String parameter\",\n      code: [\"fixture( fixtureName )\", \"fixture `fixtureName`\"],\n      language: `javascript`\n    },\n    {\n      description:\n        \"Specify the web page URL as a String parameter where all tests in a fixture start.\",\n      code: [\"fixture.page( url )\", \"fixture.page `url`\"],\n      language: `javascript`\n    },\n    {\n      description:\n        \"Specify additional information for tests in the form of key-value metadata and use it in reports.\",\n      code: [\n        \"fixture.meta({ key1: 'value1', key2: 'value2', key3: 'value3' })\"\n      ],\n      language: `javascript`\n    },\n    {\n      description:\n        \"Fixture hooks that execute a function before/after each test run\",\n      code: [\"fixture.before( fn(ctx) )\", \"fixture.after( fn(ctx) )\"],\n      language: `javascript`\n    },\n    {\n      description: \"Test hooks that execute a function before/after each test.\",\n      code: [\"fixture.beforeEach( fn(t) )\", \"fixture.afterEach( fn(t) )\"],\n      language: `javascript`\n    },\n    {\n      description: \"Skip a feature from execution.\",\n      code: [\"fixture.skip\"],\n      language: `javascript`\n    },\n    {\n      description: \"Only execute a specific feature.\",\n      code: [\"fixture.only\"],\n      language: `javascript`\n    }\n  ],\n  fullDocLink:\n    \"https://devexpress.github.io/testcafe/documentation/test-api/test-code-structure.html#fixtures\"\n};\n\nexport default snippet;\n","export { default as install } from \"./install\";\nexport { default as simpleTest } from \"./simpleTest\";\nexport { default as runningTest } from \"./runningTest\";\nexport { default as browserSupport } from \"./browserSupport\";\nexport { default as actions_click } from \"./actions_click\";\nexport { default as actions_drag } from \"./actions_drag\";\nexport { default as actions_hover } from \"./actions_hover\";\nexport { default as actions_select } from \"./actions_select\";\nexport { default as actions_typeText } from \"./actions_typeText\";\nexport { default as fixture } from \"./fixture\";\n","import React from \"react\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\n// import { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nconst CodeSyntaxHighlighter = props => {\n  const { children, language } = props;\n  return (\n    <SyntaxHighlighter\n      language={language}\n      // style={docco}\n    >\n      {children}\n    </SyntaxHighlighter>\n  );\n};\n\nexport default CodeSyntaxHighlighter;\n","import React from \"react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport CodeSyntaxHighlighter from \"./CodeSyntaxHighlighter\";\n\nconst CodeHighlight = ({ children, language }) => (\n  <>\n    {document.queryCommandSupported(\"copy\") ? (\n      <CopyToClipboard text={children} onCopy={() => {}}>\n        <div style={{ cursor: \"copy\" }}>\n          <CodeSyntaxHighlighter language={language}>\n            {children}\n          </CodeSyntaxHighlighter>\n        </div>\n      </CopyToClipboard>\n    ) : (\n      <CodeSyntaxHighlighter language={language}>\n        {children}\n      </CodeSyntaxHighlighter>\n    )}\n  </>\n);\n\nconst MultiCodeHighlight = ({ code, language }) => (\n  <>\n    {code.map(codeItem => (\n      <CodeHighlight language={language}>{codeItem}</CodeHighlight>\n    ))}\n  </>\n);\n\nexport { MultiCodeHighlight, CodeHighlight };\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nconst CardLink = ({ text, href, withPreceedingSpace, withSucceedingSpace }) => {\n  let displayText = text;\n  if (withPreceedingSpace) {\n    displayText = ` ${displayText}`;\n  }\n  if (withSucceedingSpace) {\n    displayText = `${displayText} `;\n  }\n  return (\n    <Card.Link href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n      {displayText}\n    </Card.Link>\n  );\n};\nexport default CardLink;\n"],"sourceRoot":""}