{"version":3,"sources":["components/cards/SkipTestCard.js","../node_modules/react-bootstrap/esm/ToggleButton.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/react-bootstrap/esm/ButtonToolbar.js","../node_modules/react-bootstrap/esm/ButtonGroup.js","../node_modules/react-bootstrap/esm/ToggleButtonGroup.js","base_components/MultiCodeCard.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_snippets__WEBPACK_IMPORTED_MODULE_1__","_base_components_MultiCodeCard__WEBPACK_IMPORTED_MODULE_2__","SkipTestCard","a","createElement","cardTitle","skippingTests","title","fullDocLink","codeSections","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_2___default","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","_Button__WEBPACK_IMPORTED_MODULE_4__","noop","ToggleButton","forwardRef","_ref","ref","children","name","className","checked","type","onChange","value","disabled","inputRef","props","Object","_useState","focused","setFocused","handleFocus","e","target","tagName","handleBlur","active","as","autoComplete","onFocus","onBlur","displayName","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","length","err","_iterableToArrayLimit","TypeError","_nonIterableRest","d","_ThemeProvider__WEBPACK_IMPORTED_MODULE_4__","ButtonToolbar","bsPrefix","prefix","defaultProps","role","ButtonGroup","react_default","size","toggle","vertical","_props$as","Component","rest","objectWithoutPropertiesLoose","ThemeProvider","baseClass","esm_extends","classnames_default","esm_ButtonGroup","ToggleButtonGroup","_useUncontrolled","esm","controlledProps","getValues","concat","browser_default","ElementChildren","child","values","_child$props","childVal","childOnChange","cloneElement","indexOf","createChainedFunction","inputVal","event","isActive","filter","handleToggle","Button","CodeCard","useState","_useState2","_home_travis_build_byrne_greg_testcafe_cheat_sheet_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isShowingOptions","setIsShowingOptions","_useState3","_useState4","isShowingExample","setIsShowingExample","react__WEBPACK_IMPORTED_MODULE_1___default","react_bootstrap__WEBPACK_IMPORTED_MODULE_2__","_base_components_CardHeader__WEBPACK_IMPORTED_MODULE_10__","docLink","map","_ref2","description","language","code","options","example","react_bootstrap__WEBPACK_IMPORTED_MODULE_3__","key","Item","Body","Text","_CodeHighlight__WEBPACK_IMPORTED_MODULE_9__","Title","react_bootstrap__WEBPACK_IMPORTED_MODULE_4__","style","paddingBottom","react_bootstrap__WEBPACK_IMPORTED_MODULE_5__","defaultValue","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","variant","onClick","Fragment","document","queryCommandSupported","react_copy_to_clipboard__WEBPACK_IMPORTED_MODULE_8__","text","onCopy","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","ListGroupItem","action","eventKey","handleClick","react","preventDefault","stopPropagation","AbstractNavItem","SelectableContext","href","esm_ListGroupItem","ListGroup","horizontalVariant","activeKey","horizontal","_useUncontrolled$as","AbstractNav"],"mappings":"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","file":"static/js/6.7d70ddf7.chunk.js","sourcesContent":["import React from \"react\";\nimport { skippingTests } from \"../../snippets\";\nimport MultiCodeCard from \"../../base_components/MultiCodeCard\";\n\nconst SkipTestCard = () => (\n  <MultiCodeCard\n    cardTitle={skippingTests.title}\n    fullDocLink={skippingTests.fullDocLink}\n    codeSections={skippingTests.codeSections}\n  />\n);\n\nexport default SkipTestCard;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useState, useCallback } from 'react';\nimport Button from './Button';\n\nvar noop = function noop() {};\n\nvar ToggleButton = React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      name = _ref.name,\n      className = _ref.className,\n      checked = _ref.checked,\n      type = _ref.type,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      inputRef = _ref.inputRef,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"name\", \"className\", \"checked\", \"type\", \"onChange\", \"value\", \"disabled\", \"inputRef\"]);\n\n  var _useState = useState(false),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var handleFocus = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(true);\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(false);\n  }, []);\n  return (\n    /*#__PURE__*/\n    React.createElement(Button, _extends({}, props, {\n      ref: ref,\n      className: classNames(className, focused && 'focus', disabled && 'disabled'),\n      type: null,\n      active: !!checked,\n      as: \"label\"\n    }),\n    /*#__PURE__*/\n    React.createElement(\"input\", {\n      name: name,\n      type: type,\n      value: value,\n      ref: inputRef,\n      autoComplete: \"off\",\n      checked: !!checked,\n      disabled: !!disabled,\n      onFocus: handleFocus,\n      onBlur: handleBlur,\n      onChange: onChange || noop\n    }), children)\n  );\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  role: 'toolbar'\n};\nvar ButtonToolbar = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-toolbar');\n  return (\n    /*#__PURE__*/\n    React.createElement(\"div\", _extends({}, props, {\n      ref: ref,\n      className: classNames(className, prefix)\n    }))\n  );\n});\nButtonToolbar.displayName = 'ButtonToolbar';\nButtonToolbar.defaultProps = defaultProps;\nexport default ButtonToolbar;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  vertical: false,\n  toggle: false,\n  role: 'group'\n};\nvar ButtonGroup = React.forwardRef(function (props, ref) {\n  var bsPrefix = props.bsPrefix,\n      size = props.size,\n      toggle = props.toggle,\n      vertical = props.vertical,\n      className = props.className,\n      _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      rest = _objectWithoutPropertiesLoose(props, [\"bsPrefix\", \"size\", \"toggle\", \"vertical\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  var baseClass = prefix;\n  if (vertical) baseClass = prefix + \"-vertical\";\n  return (\n    /*#__PURE__*/\n    React.createElement(Component, _extends({}, rest, {\n      ref: ref,\n      className: classNames(className, baseClass, size && prefix + \"-\" + size, toggle && prefix + \"-toggle\")\n    }))\n  );\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport invariant from 'invariant';\nimport { useUncontrolled } from 'uncontrollable';\nimport chainFunction from './createChainedFunction';\nimport { map } from './ElementChildren';\nimport ButtonGroup from './ButtonGroup';\nimport ToggleButton from './ToggleButton';\nvar defaultProps = {\n  type: 'radio'\n};\nvar ToggleButtonGroup = React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    value: 'onChange'\n  }),\n      children = _useUncontrolled.children,\n      type = _useUncontrolled.type,\n      name = _useUncontrolled.name,\n      value = _useUncontrolled.value,\n      onChange = _useUncontrolled.onChange,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"children\", \"type\", \"name\", \"value\", \"onChange\"]);\n\n  var getValues = function getValues() {\n    return value == null ? [] : [].concat(value);\n  };\n\n  var handleToggle = function handleToggle(inputVal, event) {\n    var values = getValues();\n    var isActive = values.indexOf(inputVal) !== -1;\n\n    if (type === 'radio') {\n      if (!isActive) onChange(inputVal, event);\n      return;\n    }\n\n    if (isActive) {\n      onChange(values.filter(function (n) {\n        return n !== inputVal;\n      }), event);\n    } else {\n      onChange([].concat(values, [inputVal]), event);\n    }\n  };\n\n  !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n  return (\n    /*#__PURE__*/\n    React.createElement(ButtonGroup, _extends({}, controlledProps, {\n      ref: ref,\n      toggle: true\n    }), map(children, function (child) {\n      var values = getValues();\n      var _child$props = child.props,\n          childVal = _child$props.value,\n          childOnChange = _child$props.onChange;\n\n      var handler = function handler(e) {\n        return handleToggle(childVal, e);\n      };\n\n      return React.cloneElement(child, {\n        type: type,\n        name: child.name || name,\n        checked: values.indexOf(childVal) !== -1,\n        onChange: chainFunction(childOnChange, handler)\n      });\n    }))\n  );\n});\nToggleButtonGroup.defaultProps = defaultProps;\nToggleButtonGroup.Button = ToggleButton;\nexport default ToggleButtonGroup;","import React, { useState } from \"react\";\nimport {\n  Card,\n  Button,\n  ButtonToolbar,\n  ToggleButtonGroup,\n  ToggleButton,\n  ListGroup\n} from \"react-bootstrap\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { CodeHighlight, MultiCodeHighlight } from \"./CodeHighlight\";\nimport CardHeader from \"../base_components/CardHeader\";\n\nconst CodeCard = ({ cardTitle, fullDocLink, codeSections }) => {\n  const [isShowingOptions, setIsShowingOptions] = useState(false);\n  const [isShowingExample, setIsShowingExample] = useState(false);\n\n  return (\n    <Card>\n      <CardHeader title={cardTitle} docLink={fullDocLink} />\n      {codeSections.map(({ description, language, code, options, example }) => (\n        <ListGroup key={description}>\n          <ListGroup.Item>\n            <Card.Body>\n              {description ? <Card.Text>{description}</Card.Text> : null}\n              <MultiCodeHighlight code={code} language={language} />\n            </Card.Body>\n            {options ? (\n              <Card.Body>\n                <Card.Title>Options</Card.Title>\n                <ButtonToolbar style={{ paddingBottom: \"10px\" }}>\n                  <ToggleButtonGroup\n                    type=\"radio\"\n                    name=\"options\"\n                    defaultValue={2}\n                  >\n                    <ToggleButton\n                      variant=\"outline-secondary\"\n                      value={1}\n                      onClick={() => setIsShowingOptions(true)}\n                    >\n                      Show\n                    </ToggleButton>\n                    <ToggleButton\n                      variant=\"outline-secondary\"\n                      value={2}\n                      onClick={() => setIsShowingOptions(false)}\n                    >\n                      Hide\n                    </ToggleButton>\n                  </ToggleButtonGroup>\n                </ButtonToolbar>\n                {isShowingOptions ? (\n                  <CodeHighlight language={language}>{options}</CodeHighlight>\n                ) : null}\n              </Card.Body>\n            ) : null}\n\n            {example ? (\n              <Card.Body>\n                <Card.Title>Example</Card.Title>\n                <ButtonToolbar style={{ paddingBottom: \"10px\" }}>\n                  <ToggleButtonGroup\n                    type=\"radio\"\n                    name=\"example\"\n                    defaultValue={2}\n                  >\n                    <ToggleButton\n                      variant=\"outline-secondary\"\n                      value={1}\n                      onClick={() => setIsShowingExample(true)}\n                    >\n                      Show\n                    </ToggleButton>\n                    <ToggleButton\n                      variant=\"outline-secondary\"\n                      value={2}\n                      onClick={() => setIsShowingExample(false)}\n                    >\n                      Hide\n                    </ToggleButton>\n                  </ToggleButtonGroup>\n                </ButtonToolbar>\n                {isShowingExample ? (\n                  <>\n                    <CodeHighlight language={language}>{example}</CodeHighlight>\n                    {document.queryCommandSupported(\"copy\") && (\n                      <CopyToClipboard text={code} onCopy={() => {}}>\n                        <Button variant=\"info\">Copy</Button>\n                      </CopyToClipboard>\n                    )}\n                  </>\n                ) : null}\n              </Card.Body>\n            ) : null}\n          </ListGroup.Item>\n        </ListGroup>\n      ))}\n    </Card>\n  );\n};\n\nexport default CodeCard;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n  return (\n    /*#__PURE__*/\n    React.createElement(AbstractNavItem, _extends({\n      ref: ref\n    }, props, {\n      eventKey: makeEventKey(eventKey, props.href) // eslint-disable-next-line\n      ,\n      as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n      onClick: handleClick,\n      className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n    }))\n  );\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: null,\n  horizontal: null\n};\nvar ListGroup = React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return (\n    /*#__PURE__*/\n    React.createElement(AbstractNav, _extends({\n      ref: ref\n    }, controlledProps, {\n      as: as,\n      className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n    }))\n  );\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;"],"sourceRoot":""}